{{- define "base.deployment" -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "base.name" . }}
  namespace: {{ include "base.namespace" . }}
  labels:
  {{- include "base.labels" . | nindent 4 }}
{{- if .Values.deployment.additionalLabels }}
{{ toYaml .Values.deployment.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.deployment.replicas | default 1}}
  selector:
    matchLabels:
{{ include "base.selectorLabels" . | indent 6 }}
  {{- if .Values.deployment.strategy }}
  strategy:
{{ toYaml .Values.deployment.strategy | indent 4 }}
  {{- end }}
  {{- if not (kindIs "invalid" .Values.deployment.revisionHistoryLimit) }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  {{- end }}
  template:
    metadata:
      labels:
{{ include "base.selectorLabels" . | indent 8 }}
{{- if .Values.deployment.podLabels }}
{{ toYaml .Values.deployment.podLabels | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.deployment.initContainers }}
      initContainers:
  {{- range $key, $value := .Values.deployment.initContainers  }}
      - name: {{ $key }}
{{ include "base.tplvalues.render" ( dict "value" $value "context" $ ) | indent 8 }}
      {{- end }}
      {{- end }}
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.deployment.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.deployment.affinity }}
      affinity:
      {{- include "base.tplvalues.render" (dict "value" .Values.deployment.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ template "base.name" . }}
        {{- $image := required "Undefined image for application container" .Values.deployment.image.repository }}
        {{- with .Values.deployment.image.tag    }} {{- $image = print $image ":" . }} {{- end }}
        {{- with .Values.deployment.image.digest }} {{- $image = print $image "@" . }} {{- end }}
        image: {{ $image }}
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        {{- if .Values.deployment.command }}
        command: {{- include "base.tplvalues.render" (dict "value" .Values.deployment.command "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.deployment.args }}
        args: {{- include "base.tplvalues.render" (dict "value" .Values.deployment.args "context" $) | nindent 12 }}
        {{- end }}
        {{- if .Values.deployment.ports }}
        ports:
{{ toYaml .Values.deployment.ports | indent 10 }}
        {{- end }}
        {{- if .Values.deployment.envFrom }}
        envFrom:
        {{- range $value := .Values.deployment.envFrom }}
        {{- if (eq .type "configmap") }}
        - configMapRef:
            {{- if .name }}
            name: {{ include "base.tplvalues.render" ( dict "value" $value.name "context" $ ) }}
            {{- else if .nameSuffix }}
            name: {{ template "base.name" $ }}-{{ include "base.tplvalues.render" ( dict "value" $value.nameSuffix "context" $ ) }}
            {{- else }}
            name: {{ template "base.name" $ }}
            {{- end }}
        {{- end }}
        {{- if (eq .type "secret") }}
        - secretRef:
            {{- if .name }}
            name: {{ include "base.tplvalues.render" ( dict "value" $value.name "context" $ ) }}
            {{- else if .nameSuffix }}
            name: {{ template "base.name" $ }}-{{ include "base.tplvalues.render" ( dict "value" $value.nameSuffix "context" $ ) }}
            {{- else }}
            name: {{ template "base.name" $ }}
            {{- end }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .Values.deployment.env }}
        env:
        {{- range $key, $value := .Values.deployment.env }}
        - name: {{ include "base.tplvalues.render" ( dict "value" $key "context" $ ) }}
{{ include "base.tplvalues.render" ( dict "value" $value "context" $ ) | indent 10 }}
        {{- end }}
        {{- end }}
        {{- if (.Values.deployment.startupProbe).enabled }}
        startupProbe:
          failureThreshold: {{ .Values.deployment.startupProbe.failureThreshold | default 1 }}
          periodSeconds: {{ .Values.deployment.startupProbe.periodSeconds | default 10 }}
          successThreshold: {{ .Values.deployment.startupProbe.successThreshold | default 1 }}
          timeoutSeconds: {{ .Values.deployment.startupProbe.timeoutSeconds | default 1 }}
          initialDelaySeconds: {{ .Values.deployment.startupProbe.initialDelaySeconds | default 0 }}
          {{- if .Values.deployment.startupProbe.exec }}
          exec:
            {{- toYaml .Values.deployment.startupProbe.exec | nindent 12 }}
          {{- else if .Values.deployment.startupProbe.httpGet }}
          httpGet:
            {{- toYaml .Values.deployment.startupProbe.httpGet | nindent 12 }}
          {{- else if .Values.deployment.startupProbe.tcpSocket }}
          tcpSocket:
            {{- toYaml .Values.deployment.startupProbe.tcpSocket | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if (.Values.deployment.livenessProbe).enabled }}
        livenessProbe:
          failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold | default 1 }}
          periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds | default 10 }}
          successThreshold: {{ .Values.deployment.livenessProbe.successThreshold | default 1 }}
          timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds | default 1 }}
          initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds | default 0 }}
          {{- if .Values.deployment.livenessProbe.exec }}
          exec:
            {{- toYaml .Values.deployment.livenessProbe.exec | nindent 12 }}
          {{- else if .Values.deployment.livenessProbe.httpGet }}
          httpGet:
            {{- toYaml .Values.deployment.livenessProbe.httpGet | nindent 12 }}
          {{- else if .Values.deployment.livenessProbe.tcpSocket }}
          tcpSocket:
            {{- toYaml .Values.deployment.livenessProbe.tcpSocket | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if (.Values.deployment.readinessProbe).enabled }}
        readinessProbe:
          failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold | default 1 }}
          periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds | default 10 }}
          successThreshold: {{ .Values.deployment.readinessProbe.successThreshold | default 1 }}
          timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds | default 1 }}
          initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds | default 0 }}
          {{- if .Values.deployment.readinessProbe.exec }}
          exec:
            {{- toYaml .Values.deployment.readinessProbe.exec | nindent 12 }}
          {{- else if .Values.deployment.readinessProbe.httpGet }}
          httpGet:
            {{- toYaml .Values.deployment.readinessProbe.httpGet | nindent 12 }}
          {{- else if .Values.deployment.readinessProbe.tcpSocket }}
          tcpSocket:
            {{- toYaml .Values.deployment.readinessProbe.tcpSocket | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- if .Values.deployment.volumeMounts }}
        volumeMounts:
        {{- if .Values.deployment.volumeMounts }}
        {{- range $key, $value := .Values.deployment.volumeMounts }}
        - name: {{ $key }}
{{  include "base.tplvalues.render" ( dict "value" $value "context" $ ) | indent 10 }}
        {{- end }}
        {{- end }}
      {{- end }}
        {{- with .Values.deployment.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.deployment.containerSecurityContext }}
        securityContext:
{{ toYaml .Values.deployment.containerSecurityContext | indent 10 }}
        {{- end }}
        {{- if .Values.deployment.additionalContainers }}
{{ toYaml .Values.deployment.additionalContainers | indent 6 }}
        {{- end }}
        {{- if .Values.deployment.securityContext }}
      securityContext:
{{ toYaml .Values.deployment.securityContext | indent 8 }}
          {{- end }}
      {{- if .Values.deployment.volumes }}
      volumes:
        {{- if .Values.deployment.volumes }}
        {{- range $key, $value := .Values.deployment.volumes  }}
      - name: {{ $key  }}
{{ include "base.tplvalues.render" ( dict "value" $value "context" $ ) | indent 8 }}
        {{- end }}
        {{- end }}
      {{- end }}
      serviceAccountName: {{ template "base.name" $ }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds | default 30 }}
{{- end }}
